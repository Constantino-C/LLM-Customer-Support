{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Pro plan. Export to CSV crashes. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Page goes blank on save. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Refund still not processed. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Need dark mode. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Custom roles for teams. I'm using Basic and it's better than before. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Please add functionality of extra users. I'm using Pro and it's inconvenient. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Enterprise plan. My invoice shows the wrong amount. This is really inconvenient!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Locked out after update. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Package stuck in transit. I'm using Basic and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: 2FA code never arrives. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Wrong item received. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. I was charged twice. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Lee on the Basic plan. Password reset link expired. This is really unacceptable!\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Wrong item received. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, 2FA code never arrives. I'm using Pro and it's resolved after retry. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Return label not working. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, My invoice shows the wrong amount. I'm using Pro and it's bad. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. I was charged twice. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Return label not working. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Basic plan. Wrong item received. This is really mediocre!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Pro plan. Refund still not processed. This is really just ok!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Please add functionality of extra users. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Basic plan. My invoice shows the wrong amount. This is really mediocre!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Password reset link expired. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Page goes blank on save. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Alex on the Pro plan. Return label not working. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Chen on the Enterprise plan. Refund still not processed. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Refund still not processed. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Custom roles for teams. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Export to CSV crashes. I'm using Basic and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. I was charged twice. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Refund still not processed. I'm using Pro and it's frustrating. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Please add functionality of extra users. I'm using Basic and it's resolved after retry. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, My invoice shows the wrong amount. I'm using Enterprise and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Enterprise plan. Refund still not processed. This is really mediocre!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Alex on the Enterprise plan. Refund still not processed. This is really unacceptable!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Jordan on the Pro plan. Page goes blank on save. This is really blocking!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Return label not working. I'm using Basic and it's just ok. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Locked out after update. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Priya on the Basic plan. Please add functionality of extra users. This is really annoying!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Basic plan. Please add functionality of extra users. This is really resolved after retry!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Enterprise plan. Wrong item received. This is really frustrating!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: I was charged twice. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. I was charged twice. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Need dark mode. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Return label not working. I'm using Basic and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Return label not working. I'm using Pro and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Password reset link expired. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Wrong item received. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: I was charged twice. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Export to CSV crashes. I'm using Basic and it's improved. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Custom roles for teams. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Chen on the Pro plan. Need dark mode. This is really annoying!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: 2FA code never arrives. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Password reset link expired. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Omar on the Enterprise plan. I was charged twice. This is really frustrating!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Password reset link expired. I'm using Basic and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: 2FA code never arrives. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, I was charged twice. I'm using Pro and it's improved. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Package stuck in transit. I'm using Enterprise and it's annoying. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Lee on the Basic plan. Password reset link expired. This is really annoying!\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Omar on the Enterprise plan. Package stuck in transit. This is really unacceptable!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Page goes blank on save. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Return label not working. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Return label not working. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Mobile app freezes on login. I'm using Enterprise and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"urgent\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Password reset link expired. I'm using Pro and it's better than before. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Export to CSV crashes. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Password reset link expired. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Please add functionality of extra users. I'm using Pro and it's inconvenient. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Need dark mode. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Locked out after update. I'm using Basic and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Mobile app freezes on login. I'm using Pro and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Lee on the Pro plan. Wrong item received. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Need dark mode. I'm using Enterprise and it's annoying. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Locked out after update. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Refund still not processed. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Need dark mode. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Page goes blank on save. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Package stuck in transit. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Jordan on the Basic plan. Please add functionality of extra users. This is really better than before!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Enterprise plan. Page goes blank on save. This is really resolved after retry!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Wrong item received. I'm using Basic and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Refund still not processed. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Lee on the Pro plan. My invoice shows the wrong amount. This is really unacceptable!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Password reset link expired. I'm using Enterprise and it's annoying. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Password reset link expired\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Export to CSV crashes. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Export to CSV crashes. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Return label not working. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Page goes blank on save. I'm using Enterprise and it's mediocre. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Locked out after update. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Basic plan. Refund still not processed. This is really not as expected!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Omar on the Pro plan. 2FA code never arrives. This is really inconvenient!\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Package stuck in transit. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: My invoice shows the wrong amount. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Locked out after update. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Need dark mode. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Basic plan. Export to CSV crashes. This is really blocking!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Package stuck in transit. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Mobile app freezes on login. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Refund still not processed. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Omar on the Basic plan. 2FA code never arrives. This is really unacceptable!\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: 2FA code never arrives. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Return label not working. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Please add functionality of extra users. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Priya on the Basic plan. Export to CSV crashes. This is really blocking!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. My invoice shows the wrong amount. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, My invoice shows the wrong amount. I'm using Enterprise and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Mobile app freezes on login. I'm using Enterprise and it's bad. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Package stuck in transit. I'm using Enterprise and it's not as expected. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Please add functionality of extra users. I'm using Basic and it's improved. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Locked out after update. I'm using Pro and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Lee on the Pro plan. Mobile app freezes on login. This is really not as expected!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Locked out after update. I'm using Enterprise and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Return label not working. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, I was charged twice. I'm using Basic and it's frustrating. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Package stuck in transit. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Page goes blank on save. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Custom roles for teams. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, My invoice shows the wrong amount. I'm using Pro and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Pro plan. Page goes blank on save. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Export to CSV crashes. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Custom roles for teams. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Export to CSV crashes. I'm using Enterprise and it's better than before. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Locked out after update. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Jordan on the Enterprise plan. I was charged twice. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Mobile app freezes on login. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Pro plan. Locked out after update. This is really frustrating!\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Refund still not processed. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Locked out after update. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, My invoice shows the wrong amount. I'm using Basic and it's not as expected. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Alex on the Enterprise plan. Please add functionality of extra users. This is really inconvenient!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Locked out after update. I'm using Enterprise and it's bad. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: 2FA code never arrives. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Basic plan. Wrong item received. This is really mediocre!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Chen on the Basic plan. Page goes blank on save. This is really frustrating!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Refund still not processed. I'm using Pro and it's inconvenient. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Wrong item received. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Wrong item received. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Please add functionality of extra users. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Need dark mode. I'm using Enterprise and it's improved. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Page goes blank on save. I'm using Pro and it's mediocre. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. I was charged twice. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Custom roles for teams. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Custom roles for teams. I'm using Enterprise and it's improved. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Locked out after update. I'm using Enterprise and it's just ok. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Custom roles for teams. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Pro plan. I was charged twice. This is really inconvenient!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Please add functionality of extra users. I'm using Enterprise and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Enterprise plan. Export to CSV crashes. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"urgent\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Mobile app freezes on login. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Refund still not processed. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, 2FA code never arrives. I'm using Pro and it's just ok. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Pro plan. Custom roles for teams. This is really annoying!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Need dark mode. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Custom roles for teams. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Return label not working. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"urgent\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Page goes blank on save. I'm using Enterprise and it's resolved after retry. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: My invoice shows the wrong amount. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. Page goes blank on save. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Mobile app freezes on login. I'm using Enterprise and it's just ok. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Mobile app freezes on login. I'm using Enterprise and it's mediocre. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Package stuck in transit. I'm using Basic and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Package stuck in transit\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Refund still not processed. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. 2FA code never arrives. Priority should be urgent.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Jordan on the Pro plan. Wrong item received. This is really just ok!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: 2FA code never arrives. Using Pro.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"2FA code never arrives\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Pro plan. Need dark mode. This is really just ok!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Pro. I was charged twice. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Refund still not processed. I'm using Enterprise and it's blocking. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Taylor on the Pro plan. Refund still not processed. This is really bad!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Pro\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Chen on the Enterprise plan. Custom roles for teams. This is really just ok!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Locked out after update. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Mobile app freezes on login. Priority should be high.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: My invoice shows the wrong amount. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"positive\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Refund still not processed. I'm using Basic and it's bad. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Pro plan. Wrong item received. This is really annoying!\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. I was charged twice. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Mobile app freezes on login. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Mobile app freezes on login\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Locked out after update. I'm using Pro and it's annoying. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"login\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Locked out after update\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Refund still not processed. I'm using Enterprise and it's not as expected. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Enterprise\", \"sentiment\": \"neutral\", \"summary\": \"Refund still not processed\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Alex on the Basic plan. Please add functionality of extra users. This is really annoying!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Basic plan. Page goes blank on save. This is really blocking!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Page goes blank on save\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Priya on the Pro plan. Export to CSV crashes. This is really inconvenient!\n[/USER]\n[ASSISTANT]\n{\"category\": \"bug\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Export to CSV crashes\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Need dark mode. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Ivy on the Enterprise plan. My invoice shows the wrong amount. This is really blocking!\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"high\", \"product\": \"Enterprise\", \"sentiment\": \"negative\", \"summary\": \"My invoice shows the wrong amount\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: I was charged twice. Using Basic.\n[/USER]\n[ASSISTANT]\n{\"category\": \"billing\", \"priority\": \"urgent\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"I was charged twice\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Return label not working. I'm using Basic and it's unacceptable. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"high\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Return label not working\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nI tried support but no luck: Custom roles for teams. Using Enterprise.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Custom roles for teams\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Basic. Please add functionality of extra users. Priority should be low.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Basic\", \"sentiment\": \"neutral\", \"summary\": \"Please add functionality of extra users\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nMy company is on Enterprise. Need dark mode. Priority should be medium.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"medium\", \"product\": \"Enterprise\", \"sentiment\": \"positive\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Need dark mode. I'm using Pro and it's just ok. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"low\", \"product\": \"Pro\", \"sentiment\": \"positive\", \"summary\": \"Need dark mode\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHello, Wrong item received. I'm using Basic and it's bad. Please fix.\n[/USER]\n[ASSISTANT]\n{\"category\": \"shipping\", \"priority\": \"medium\", \"product\": \"Basic\", \"sentiment\": \"negative\", \"summary\": \"Wrong item received\"}"}
{"text": "<s>[SYSTEM]\nYou are a meticulous data engineer. Read the user's support message and extract the relevant fields to populate the given Schema. Output ONLY a JSON object. Do not add extra text.\n[INSTRUCTION]\nSchema: {'properties': {'category': {'enum': ['billing', 'login', 'bug', 'feature_request', 'shipping'], 'title': 'Category', 'type': 'string'}, 'priority': {'enum': ['low', 'medium', 'high', 'urgent'], 'title': 'Priority', 'type': 'string'}, 'product': {'enum': ['Basic', 'Pro', 'Enterprise'], 'title': 'Product', 'type': 'string'}, 'sentiment': {'enum': ['negative', 'neutral', 'positive'], 'title': 'Sentiment', 'type': 'string'}, 'summary': {'maxLength': 240, 'title': 'Summary', 'type': 'string'}}, 'required': ['category', 'priority', 'product', 'sentiment', 'summary'], 'title': 'Ticket', 'type': 'object'}\n\nExtract fields from the message to populate the Schema. If unsure, make the best guess. Output strictly valid JSON.\n[USER]\nHi team, I'm Sam on the Pro plan. Custom roles for teams. This is really mediocre!\n[/USER]\n[ASSISTANT]\n{\"category\": \"feature_request\", \"priority\": \"high\", \"product\": \"Pro\", \"sentiment\": \"neutral\", \"summary\": \"Custom roles for teams\"}"}
